From ezaki@toba-cmt.ac.jp Mon Dec  8 02:13:45 2003
Return-Path: <ezaki@toba-cmt.ac.jp>
Received: from twing.toba-cmt.ac.jp (twing.toba-cmt.ac.jp [202.26.248.3])
	by tcw2.ppsw.rug.nl (8.12.8/8.12.8) with SMTP id hB89DxOj032639
	for <M.Bulacu@ai.rug.nl>; Mon, 8 Dec 2003 10:14:01 +0100
Received: (qmail 82337 invoked from network); 8 Dec 2003 09:13:51 -0000
Received: from tcwx1.ai.rug.nl (HELO twing.toba-cmt.ac.jp) (129.125.139.246)
  by twing.toba-cmt.ac.jp with SMTP; 8 Dec 2003 09:13:51 -0000
Message-Id: <200312080113.AA02079@twing.toba-cmt.ac.jp>
From: Nobuo Ezaki <ezaki@toba-cmt.ac.jp>
Date: Mon, 08 Dec 2003 10:13:45 +0900
To: M.Bulacu@ai.rug.nl
Subject: Icpr text
MIME-Version: 1.0
X-Mailer: AL-Mail32 Version 1.13
Content-Type: multipart/mixed;
  boundary="--------------------9913872359717223"
X-ai-MailScanner-Information: Please contact helpdesk@ai.rug.nl for more information
X-ai-MailScanner: Found to be clean
X-ai-MailScanner-SpamCheck: not spam, SpamAssassin (score=1.2, required 4,
	DATE_IN_PAST_06_12 0.45, SPAM_PHRASE_00_01 0.78)
X-ai-MailScanner-SpamScore: s
Status: RO
X-Status: U
X-KMail-EncryptionState:  
X-KMail-SignatureState:  

This is multipart message.

----------------------9913872359717223
Content-Type: text/plain; charset=us-ascii

This is text of ICPR paper.

----------------------9913872359717223
Content-Type: application/octet-stream;
	name="icpr-nobuo.txt"
Content-Transfer-Encoding: base64
Content-Disposition: attachment;
	filename="icpr-nobuo.txt"

VGV4dCBSZWFkaW5nIFN5c3RlbSBmb3IgVmlzdWFsbHkgSW1wYWlyZWQgUGVyc29uIGZyb20g
TmF0dXJhbCBTY2VuZSBJbWFnZQ0KIA0KIA0KIA0KIA0KIA0KIA0KQWJzdHJhY3QNCiBXZSBw
cm9wb3NlIFRleHQgcmVhZGluZyBzeXN0ZW0gZm9yIHZpc3VhbGx5IGltcGFpcmVkIHBlcnNv
bi4gVGhpcyBzeXN0ZW0gcmVhZHMgdGV4dCBpbmZvcm1hdGlvbiBmcm9tIG5hdHVyYWwgc2Nl
bmUgaW1hZ2UuIFRoaXMgcGFwZXIgZGVzY3JpYmVzIHN5c3RlbSBkZXNpZ24sIGNoYXJhY3Rl
ciBleHRyYWN0aW9uIG1ldGhvZCBhbmQgcmVzdWx0cyBvZiBleHRyYWN0aW9uLiBSZWNlbnRs
eSB0aGUgY29uY2VybiB3aXRoIGNoYXJhY3RlciBleHRyYWN0aW9uIGZyb20gbmF0dXJhbCBz
Y2VuZSBpbWFnZSBoYXMgYmVlbiBncm93aW5nLiBUaGVzZSB0ZWNobm9sb2dpZXMgYXJlIHVz
ZWQgZm9yIGF1dG9tYXRpYyBpbWFnZSBjbGFzc2lmaWNhdGlvbiwgcm9ib3RpY3MgYW5kIGlu
dGVsbGlnZW50IHRyYW5zcG9ydCBzeXN0ZW0uIEEgbmF2aWdhdGlvbiBzeXN0ZW0gZm9yIGJs
aW5kIHBlcnNvbiBoYXMgcHJvcG9zZWQgdXNpbmcgY2hhcmFjdGVyIGV4dHJhY3Rpb24gaG93
ZXZlciBpdCBoYXMgbm90IGJlZW4gcHJhY3RpY2FsIHVzZSB5ZXQuIFRoZSBpbXBvcnRhbnQg
cG9pbnQgb2YgdGhpcyBzeXN0ZW0gZm9yIGJsaW5kIHBlcnNvbiBpcyB0byBmaW5kIGNoYXJh
Y3RlciBhcmVhIGZyb20gbmF0dXJhbCBzY2VuZSBpbWFnZSBiZWNhdXNlIGJsaW5kIHBlcnNv
biBjYW4gbm90IHRha2UgYSBnb29kIGltYWdlIHdoaWNoIGNvbnNpc3RzIG9mIG9ubHkgY2hh
cmFjdGVyIGFyZWEuIFNvIHdlIHByb3Bvc2UgNCBjaGFyYWN0ZXIgZXh0cmFjdGlvbiBtZXRo
b2RzIGZvciB2YXJpb3VzIGNoYXJhY3RlciBzaXplcy4gQXQgZmlyc3Qgb3VyIHN5c3RlbSB0
cmllcyB0byBmaW5kIHNtYWxsIGNoYXJhY3RlciBhcmVhIGZyb20gbmF0dXJhbCBzY2VuZS4g
VGhlbiBpdCB6b29tcyBpbiB0byBjaGFyYWN0ZXIgYXJlYSBhbmQgcmV0YWtlIG1vcmUgaGln
aCByZXNvbHV0aW9uIGltYWdlIGZvciBjaGFyYWN0ZXIgcmVjb2duaXRpb24uIFdlIHRlc3Rl
ZCBldmFsdWF0aW9uIG9mIG91ciBtZXRob2QgYnkgSUNEQVIgMjAwMyBSb2J1c3QgUmVhZGlu
ZyBDb21wZXRpdGlvbiBkYXRhLiBBcyB0aGUgcmVzdWx0IHdlIGZvdW5kIHRoZSBTb2JlbCBl
ZGdlIGRldGVjdGlvbiBiYXNlZCBtZXRob2QgaXMgZWZmZWN0aXZlIGZvciBiaWdnZXIgY2hh
cmFjdGVyIGRldGVjdGlvbi4gVGhlIHJlc3VsdHMgd2VyZSBQcmVjaXNpb24gPSAwLjU3LCBS
ZWNhbGwgPSAwLjYxIGJ5IGVzdGltYXRpb24gb2YgSUNEQVIgY29tcGV0aXRpb24uIFRoaXMg
cmVzdWx0IGlzIG5vdCBlbm91Z2ggZm9yIHByYWN0aWNhbCB1c2UsIHNvIHdlIHdpbGwgaW1w
cm92ZSBvdXIgZXh0cmFjdGlvbiBtZXRob2QuDQoNCjEuIEludHJvZHVjdGlvbg0KIA0KSW4g
cmVjZW50IHllYXJzLCB2aXN1YWxseSBpbXBhaXJlZCBwZXJzb25zIGFyZSBpbmNyZWFzaW5n
IGJ5IGV5ZSBkaXNlYXNlcyBhbmQgdHJhZmZpYyBhY2NpZGVudHMgZXRjLiBUaGVyZSBhcmUg
YWJvdXQgMjAwLDAwMCBwZXJzb25zIHdpdGggYWNxdWlyZWQgYmxpbmRuZXNzIGluIEphcGFu
LiBUaGVyZWZvcmUgY29tcHV0ZXIgYXBwbGljYXRpb24gc3VwcG9ydCBmb3IgdGhlIHZpc3Vh
bGx5IGltcGFpcmVkIHBlcnNvbiBoYXMgYmVjb21lIGFuIGltcG9ydGFudCB0aGVtZS4gV2Ug
aGF2ZSBhbHJlYWR5IGRldmVsb3BlZCBwZW4tYmFzZWQgY2hhcmFjdGVyIGlucHV0IHN5c3Rl
bSBmb3IgdmlzdWFsbHkgaW1wYWlyZWQgcGVyc29uIG9uIFBEQS4gQWNxdWlyZWQgYmxpbmRu
ZXNzIHBlcnNvbiByZW1lbWJlcnMgc2hhcGVzIGFuZCB3cml0aW5nIG9yZGVycyBvZiBKYXBh
bmVzZSBjaGFyYWN0ZXJzLiBUaGV5IGNhbiB1c2UgdGhpcyBzeXN0ZW0gZm9yIG5vdGVwYWQg
YW5kIEUtbWFpbCB0ZXJtaW5hbCBhbnl0aW1lLCBhbnl3aGVyZS4gVGhpcyBzeXN0ZW0gd29y
a3MgYXMgY29tbXVuaWNhdGlvbiB0b29sLiBIb3dldmVyIHRoaXMgc3lzdGVtIGlzIG5vdCBl
bm91Z2ggdG8gZ28gb3V0c2lkZSBieSBoaW1zZWxmLg0KV2hlbiB2aXN1YWxseSBpbXBhaXJl
ZCBwZXJzb24gaXMgd2Fsa2luZyBhcm91bmQgYnkgaGltc2VsZiwgaXQgaXMgaW1wb3J0YW50
IHRvIGdldCB0ZXh0IGluZm9ybWF0aW9uIGZyb20gbmF0dXJhbCBzY2VuZS4gRm9yIGV4YW1w
bGUsIGEgc2lnbiCBZXN0b3CBZiBhdCBhIGNyb3NzaW5nIHdpdGhvdXQgYSBzaWduYWwgaGFz
IGFuIGltcG9ydGFudCBtZWFuaW5nLiBJbiBhZGRpdGlvbiwgaWYgdGhlIHNpZ25ib2FyZCBv
ZiBhIHN0b3JlIGNhbiBiZSByZWFkLCB0aGVpciB3aXNoZXMgY2FuIGJlIGdyYW50IGVhc2ls
eS4NClRoZSBjb25jZXJuIHdpdGggY2hhcmFjdGVyIGV4dHJhY3Rpb24gZnJvbSBuYXR1cmFs
IHNjZW5lIGltYWdlIGhhcyBiZWVuIGdyb3dpbmcgZm9yIHRoZSBsYXN0IHNldmVyYWwgeWVh
cnMgWzFdLiBOb3cgbWFueSBtZXRob2RzIGFyZSBwcm9wb3NlZCBmb3IgY2hhcmFjdGVyIGV4
dHJhY3Rpb24uIEVkZ2UgZGV0ZWN0aW9uIFsyXSwgYmluYXJpemF0aW9uIFszXSwgc3BhY2Ug
ZnJlcXVlbmN5IG9mIGltYWdlIFs0XSBhbmQgTWF0aGVtYXRpY2FsIE1vcnBob2xvZ3kgb3Bl
cmF0aW9uIFs1XSBhcmUgdXNlZC4gWWFuZyBoYXMgcHJvcG9zZWQgU2lnbiBSZWNvZ25pdGlv
biBhbmQgVHJhbnNsYXRpb24gc3lzdGVtIGZvciB0b3VyaXN0IFs2XS4gVGhpcyBzeXN0ZW0g
ZXh0cmFjdHMgY2hhcmFjdGVycyBmcm9tIENoaW5lc2Ugc2lnbiBib2FyZCBpbWFnZSBhbmQg
dHJhbnNsYXRlcyB0byBFbmdsaXNoLiBBbmQgc29tZSByZXNlYXJjaGVycyBhcmUgYWxyZWFk
eSBkZXZlbG9wZWQgdGhlIHRleHQgcmVhZGluZyBzeXN0ZW0gZm9yIHZpc3VhbGx5IGltcGFp
cmVkIHBlcnNvbiBbN10uIEhvd2V2ZXIgdGhlc2Ugc3lzdGVtcyBjYW4gbm90IGV4dHJhY3Qg
dGV4dCBhcmVhIHBlcmZlY3RseSBiZWNhdXNlIG5hdHVyYWwgc2NlbmUgaW1hZ2VzIGNvbnNp
c3RzIG9mIGNvbXBsZXggb2JqZWN0IHN1Y2ggYXMgdGV4dHVyZSwgYnVpbGRpbmdzLCB0cmVl
cywgd2luZG93IGZyYW1lcyBhbmQgc28gb24uIFRoZW4gd2UgYWxzbyBwcm9wb3NlIHRleHQg
aW5mb3JtYXRpb24gcmVhZGluZyBzeXN0ZW0gZm9yIHZpc3VhbGx5IGltcGFpcmVkIHBlcnNv
biBmcm9tIG5hdHVyYWwgc2NlbmUgaW1hZ2UuIFdlIHByb3Bvc2Ugcm9idXN0IHRleHQgZXh0
cmFjdCBtZXRob2QgdGhyb3VnaCBkZXZlbG9waW5nIHByb3Bvc2Ugc3lzdGVtLiANCkluIHRo
aXMgcGFwZXIsIHdlIGRlc2NyaWJlIHN5c3RlbSBkZXNpZ24gb2Ygb3VyIHByb3Bvc2VkIHN5
c3RlbS4gTmV4dCB3ZSBwcmVzZW50IGFib3V0IDQgbWV0aG9kcyBmb3IgY2hhcmFjdGVyIGFy
ZWEgZXh0cmFjdGlvbi4gQWxtb3N0IGFsbCByZXNlYXJjaGVycyBhcmUgdXNpbmcgb25seSAx
IG1ldGhvZCBmb3IgdGV4dCBkZXRlY3Rpb24uIFRoZXJlIGFyZSBtYW55IHNpemUgb2YgY2hh
cmFjdGVyIGluIGEgbmF0dXJhbCBzY2VuZSBob3dldmVyIGl0IGlzIGRpZmZpY3VsdCB0byBl
eHRyYWN0IGFsbCBjaGFyYWN0ZXIgYXJlYXMgYnkgdXNpbmcgMSBtZXRob2QuIEVzcGVjaWFs
bHksIGZvciB2aXN1YWxseSBpbXBhaXJlZCBwZXJzb24gaXQgaXMgaW1wb3NzaWJsZSB0byBn
ZXQganVzdCBjaGFyYWN0ZXIgaW1hZ2UgYXQgdGhlIGZpcnN0IG1vbWVudC4gRmluYWxseSBl
eHRyYWN0aW9uIGFjY3VyYWN5IHdpbGwgYmUgc2hvdy4NCiANCjIuIFN5c3RlbSBkZXNpZ24N
CiANCkZpZ3VyZSAxIHNob3dzIHRoZSBzeXN0ZW0gY29uZmlndXJhdGlvbiBvZiBvdXIgcHJv
cG9zZWQgc3lzdGVtLiBUaGlzIHN5c3RlbSBpcyBjb25zaXN0cyBvZiB0aGUgUERBLCBDQ0Qt
Y2FtZXJhIGFuZCB2b2ljZSBzeW50aGVzaXplciBzb2Z0d2FyZS4gWm9vbS1pbiwgem9vbSBv
dXQsIHBhbiwgdGlsdCwgYW5kIGFuIGF1dG8gZm9jdXMgZnVuY3Rpb24gYXJlIHJlcXVpcmVk
IGZvciBDQ0QtY2FtZXJhLg0KTm93IHdlIGFyZSBwbGFubmluZyB0d28gc3RhdGVzIGZvciBz
ZWFyY2hpbmcgdGV4dCBpbmZvcm1hdGlvbi4gRmlyc3Qgc3RhdGUgaXMgbmFtZWQggWd3YWxr
aW5nIGFyb3VuZCBtb2RlgWguIEluIHdhbGtpbmcgYXJvdW5kIG1vZGUsIHRoaXMgc3lzdGVt
IHdvcmtzIGFzIGZvbGxvd3MuIEF0IGZpcnN0LCB0aGUgc3lzdGVtIGdldHMgbmF0dXJhbCBz
Y2VuZSBpbWFnZSBhdXRvbWF0aWNhbGx5IGJ5IENDRC1jYW1lcmEgb24gdXNlcoFmcyBzaG91
bGRlci4gTmV4dCBtZXRob2QgZm9yIHNtYWxsIGNoYXJhY3RlciBhcmVhIGV4dHJhY3Rpb24g
aXMgdXNlZCBmb3IgZmlyc3QgaW1hZ2UuIElmIGNoYXJhY3RlciBhcmVhIGlzIGV4dHJhY3Rl
ZCBieSB0aGlzIG1ldGhvZCwgdGhlIHN5c3RlbSB6b29tcyBpbiB0byB0aGUgZXh0cmFjdGVk
IGNoYXJhY3RlciBhcmVhIGJlY2F1c2UgdGhlc2UgY2hhcmFjdGVyIGltYWdlcyBhcmUgbm90
IGVub3VnaCB0byByZWNvZ25pemUuIFRoZW4gdGhlIHN5c3RlbSB1c2VzIGxhcmdlIGNoYXJh
Y3RlciBleHRyYWN0aW9uIG1ldGhvZCBmb3Igem9vbWVkIGluIGltYWdlLiBUaGUgZXh0cmFj
dGVkIGZpbmUgY2hhcmFjdGVyIGFyZWEgaXMgcmVjb2duaXplZCBieSBvZmZsaW5lIGNoYXJh
Y3RlciByZWNvZ25pdGlvbiBtZXRob2QuIEZpbmFsbHkgdGV4dCBpbmZvcm1hdGlvbiBpcyBy
ZWFkIG91dCBieSB2b2ljZSBzeW50aGVzaXplci4gDQogDQogDQpGaWcuMSBTeXN0ZW0gY29u
ZmlndXJhdGlvbiAod2Fsa2luZyBhcm91bmQgbW9kZSkNCiANClNlY29uZCBtb2RlIGlzIHVz
ZWQgZm9yIHJlYWRpbmcgcmVzdGF1cmFudCBtZW51IG9yIGJvb2sgY292ZXIgd2hpY2ggdXNl
ciBjYW4gZ3Vlc3MgY2hhcmFjdGVyIGFyZWEgYXBwcm94aW1hdGVseS4gIFRoZSB1c2VyIGhv
bGQgY2FtZXJhIGJ5IGhpcy9oZXIgaGFuZCBhbmQgc2VhcmNoIGFzIGhhbmQgc2Nhbm5lci4g
SW4gdGhpcyBjYXNlLCBpbWFnZSByZXNvbHV0aW9uIHNob3VsZCBoaWdoZXIgdGhhbiB3YWxr
IGFyb3VuZCBtb2RlIGJlY2F1c2UgaXQgaXMgZXhwZWN0YXRpb24gdGhhdCB0YXJnZXQgaW1h
Z2VzIGluY2x1ZGUgbWFueSBjaGFyYWN0ZXJzLg0KIA0KMy4gRm9yIHNtYWxsIGNoYXJhY3Rl
ciBhcmVhIGV4dHJhY3Rpb24gYnkgTWF0aGVtYXRpY2FsIE1vcnBob2xvZ3kgb3BlcmF0aW9u
DQogDQpUaGlzIG1ldGhvZCBpcyBmaW5kaW5nIHNtYWxsIGNoYXJhY3RlciBhcmVhIGFuZCBi
YXNlZCBvbiBtYXRoZW1hdGljYWwgbW9ycGhvbG9neSBvcGVyYXRpb24gb2YgdG9wLWhhdCBw
cm9jZXNzaW5nLiBJbiBnZW5lcmFsbHkgdG9wLWhhdCBwcm9jZXNzaW5nIGlzIGNhbGN1bGF0
ZWQgYnkgZGlmZmVyZW50aWFsIGJldHdlZW4gb3JpZ2luYWwgaW1hZ2UgYW5kIGNsb3Npbmcg
b3BlcmF0aW9uIGZvciBvcmlnaW5hbCBpbWFnZS4gVGhlcmVmb3JlIHRvcC1oYXQgb3BlcmF0
aW9uIHdpbGwgYmUgZGV0ZWN0ZWQgaW4gdGhlIGNhc2Ugb2YgcGl4ZWwgdmFsdWUgb2YgY2hh
cmFjdGVyIGFyZWEgaXMgaGlnaGVyIHRoYW4gYmFja2dyb3VuZCBhcmVhLiBHdSBbOF0gYWxz
byB1c2VzIGRpZmZlcmVudGlhbCBiZXR3ZWVuIG9wZW5pbmcgb3BlcmF0aW9uIGFuZCBvcmln
aW5hbCBpbWFnZSB0byBkZXRlY3QgZm9yIGxvd2VyIGNoYXJhY3RlciB2YWx1ZSBhcmVhLiBU
aGlzIG1ldGhvZCBpcyB2ZXJ5IGVmZmVjdGl2ZSBob3dldmVyIGl0IHRha2VzIGEgbG9uZyBj
YWxjdWxhdGlvbiB0aW1lIGlmIGxhcmdlIGZpbHRlciBpcyB1c2VkIHRvIGxhcmdlIGNoYXJh
Y3RlciBleHRyYWN0aW9uLiBUaGVuIHdlIHByb3Bvc2UgdG8gZmluZCBzbWFsbCBjaGFyYWN0
ZXIgYXJlYSBiYXNlZCB0aGVpciBtZXRob2QuIFdlIHVzZSBkaXNrIGZpbHRlciBvZiByYWRp
dXMgMyBwaXhlbC4gQW5kIHdlIGFycmFuZ2VkIHRvIHVzZSBkaWZmZXJlbnRpYWwgYmV0d2Vl
biBjbG9zaW5nIG9wZXJhdGlvbiBmb3Igb3JpZ2luYWwgaW1hZ2UgYW5kIG9wZW5pbmcgb3Bl
cmF0aW9uIGZvciBvcmlnaW5hbCBpbWFnZS4gV2VzdGVybiBjaGFyYWN0ZXIgc3RyaW5ncyBh
cmUgaG9yaXpvbnRhbCBsb25nLCB0aGVyZWZvcmUgdGhpcyBtZXRob2QgZXh0cmFjdHMgY29u
bmVjdGluZyBjaGFyYWN0ZXIgc3RyaW5ncyAoRmlnLjIgKGIpKS4gRmluYWxseSBob3Jpem9u
dGFsIGxvbmcgYXJlYXMgaW4gdGhlIG91dHB1dCBpbWFnZSBhcmUgZXh0cmFjdGVkIGFzIGNh
bmRpZGF0ZSB0ZXh0IGFyZWEgKEZpZy4yIChjKSkuDQogDQogDQooYSkgIE9yaWdpbmFsIGlt
YWdlDQogDQogDQooYikgRGlmZmVyZW50aWFsIGJldHdlZW4gY2xvc2luZyBhbmQgb3Blbmlu
Zw0KIA0KIA0KKGMpIEV4dHJhY3RlZCBjaGFyYWN0ZXIgYXJlYQ0KIA0KRmlnLjIgTW9ycGhv
bG9naWNhbCBvcGVyYXRpb24gYmFzZWQgZXh0cmFjdGlvbg0KIA0KNC4gRXh0cmFjdGlvbiBt
ZXRob2QgZm9yIG1pZGRsZSBvciBsYXJnZSBjaGFyYWN0ZXINCiANCldlIHByb3Bvc2UgMyBt
ZXRob2RzIHRvIGV4dHJhY3QgZm9yIG1pZGRsZSBvciBsYXJnZSBjaGFyYWN0ZXIuIDIgb2Yg
dGhlc2UgYXJlIGJhc2VkIG9uIFNvYmVsIGVkZ2UgZGV0ZWN0aW9uIGZpbHRlciBhbmQgYW5v
dGhlciBvbmUgaXMgYmFzZWQgb24gUkdCIGNvbG9yIGluZm9ybWF0aW9uLiBUaGVzZSBtZXRo
b2RzIGFyZSBwcm9jZXNzZWQgZm9yIHpvb21lZCBpbiBhcmVhIHRoYXQgaXMgZm91bmQgYnkg
bW9ycGhvbG9naWNhbCBvcGVyYXRpb24uIEVhY2ggbWV0aG9kIGV4dHJhY3RzIGNhbmRpZGF0
ZSB0ZXh0IGFyZWEuIEhvd2V2ZXIgdGhlcmUgYXJlIG1hbnkgdW4tY2hhcmFjdGVyIGFyZWFz
IGluIHRoZW0gc28gd2UgYXJlIHVzaW5nIGNoYXJhY3RlciBzdHJpbmcgcnVsZSB0YWtlbiB1
cCBpbiBzZWN0aW9uIDQuNC4NCg0KNC4xLiBQcmVwcm9jZXNzaW5nDQoNCjQuMS4xLiBFZGdl
IGJhc2VkIGNoYXJhY3RlciBleHRyYWN0aW9uDQogDQpUaGlzIG1ldGhvZCBpcyBiYXNlZCBv
biBlZGdlIGRldGVjdGlvbi4gVGhlIGZpcnN0IHN0ZXAgaXMgdG8gbWFrZSAzIGdyYXkgc2Nh
bGUgaW1hZ2VzIGZyb20gUkdCIHZhbHVlcy4gTmV4dCBlZGdlIGlzIGV4dHJhY3RlZCBieSB1
c2luZyBTb2JlbCBvcGVyYXRvciBmb3IgZWFjaCBncmF5IGltYWdlLiBNYXhpbXVtIG9mIGVk
Z2UgdmFsdWUgb2YgZWFjaCBpbWFnZSBpcyBzZWxlY3RlZCBhcyBvdXRwdXQgaW1hZ2Ugb24g
ZWFjaCBwaXhlbC4gRmluYWxseSBiaW5hcml6YXRpb24gWzhdIGlzIGNhcnJpZWQgdG8gb3V0
cHV0IGltYWdlLg0KIA0KNC4xLjIuIFRleHQgYXJlYSBkZXRlY3Rpb24gZm9yIGJvbGQgY2hh
cmFjdGVyDQogDQpUaGlzIG1ldGhvZCBpcyB1c2luZyBmZWF0dXJlIG9mIHRoYXQgY2hhcmFj
dGVyIGlzIGluZGVwZW5kZW50bHkuIEJhc2ljYWxseSBwcmVwcm9jZXNzaW5nIGlzIHNhbWUg
YXMgZWRnZSBiYXNlZCBjaGFyYWN0ZXIgZXh0cmFjdGlvbiBtZXRob2QuIEFmdGVyIHByZXBy
b2Nlc3Npbmcgb2YgaXQsIGVhY2ggcGl4ZWwgdmFsdWUgaXMgcmV2ZXJzZWQuIFRoaXMgaXMg
ZXhwZWN0YXRpb25zIG9mIGFsbCBjaGFyYWN0ZXJzIGFyZSBzdXJyb3VuZGVkIGJ5IGVkZ2Uu
IEhvd2V2ZXIgdGhpcyBtZXRob2QgaXMgZWZmZWN0aXZlIGZvciBvbmx5IGJvbGQgY2hhcmFj
dGVycy4NCiANCjQuMS4zLiBUcmFuc2Zvcm0gaW50byA4IGNvbG9ycw0KIA0KR2VuZXJhbGx5
IGFsbW9zdCBjaGFyYWN0ZXIgYXJlYSBoYXMgc2FtZSBjb2xvci4gVGhlcmVmb3JlIGNvbG9y
IGluZm9ybWF0aW9uIGlzIGFsc28gaW1wb3J0YW50LiBUaGlzIG1ldGhvZCB0cmFuc2Zvcm0g
aW50byBvbmx5IDggY29sb3JzIGZyb20gb3JpZ2luYWwgaW1hZ2UuIEZpcnN0LCAzIGdyYXkg
aW1hZ2VzIGFyZSBtYWRlIGJ5IFJHQiBjb2xvciBpbmZvcm1hdGlvbi4gTmV4dCBiaW5hcml6
YXRpb24gaXMgcGVyZm9ybWVkIHRvIGVhY2ggUkdCIGdyYXkgaW1hZ2VzLiBPdXRwdXQgaW1h
Z2UgaXMgbWFkZSBieSB0aGVzZSAzIGltYWdlcy4gVGhlcmVmb3JlIGFsbCBwaXhlbCB2YWx1
ZSBpbiBpbWFnZSBpcyBjbGFzc2VkIHRvIDggY29sb3JzLiANCg0KIA0KKGEpCW9yaWdpbmFs
IGltYWdlICAJIA0KKGIpIGVkZ2UgYmFzZWQgbWV0aG9kDQogDQooYykgcmV2ZXJzZSBpbWFn
ZSBvZiBlZGdlCSANCiAgIChkKSA4IGNvbG9yIA0KRmlnLjMgc2FtcGxlIG9mIG1pZGRsZSBz
aXplIGNoYXJhY3Rlcg0KIA0KNC4yLiBDaGFyYWN0ZXIgc3RyaW5nIHJ1bGUNCiANCkVhY2gg
bWV0aG9kIGV4dHJhY3RzIGNoYXJhY3RlciBjYW5kaWRhdGUgYXJlYXMuIEhvd2V2ZXIgdGhl
cmUgYXJlIG1hbnkgbm9uLWNoYXJhY3RlciByZWdpb25zIGluIHRoZSByZXN1bHRzLiBTbyB3
ZSB1c2Ugc29tZSBmZWF0dXJlcywgd2hpY2ggYXJlYSBhc3BlY3QgcmF0aW8sIGFyZWEgc2l6
ZSBldGMsIHRvIGRlY3JlYXNlIHRoZXNlIG5vbi1jaGFyYWN0ZXIgYXJlYXMuIEZpZy4gNCBz
aG93cyBmZWF0dXJlIG9mIGNoYXJhY3RlciBhcmVhLiBXaSBpcyB3aWR0aCBvZiBleHRyYWN0
ZWQgYXJlYSwgSGkgaXMgaGVpZ2h0LCB4IGFuZCB5IGFyZSBkaXN0YW5jZSBvZiBncmF2aXR5
IG9mIGVhY2ggYXJlYS4gQXNwZWN0IHJhdGlvIGlzIGVzdGltYXRlZCBieSB3aWR0aCAvIGhl
aWdodC4gDQogDQpGaWcuNCBDaGFyYWN0ZXIgc3RyaW5ncw0KIA0KV2UgYWxzbyBhZGFwdCB0
aGUgZmVhdHVyZSB3aGljaCBnZW5lcmFsbHkgY2hhcmFjdGVycyBkbyBub3QgZXhpc3QgYXMg
b25lIGNoYXJhY3RlciwgdGhpcyBtZWFucyBhbG1vc3QgY2hhcmFjdGVyIHN0cmluZ3MgY29u
c2lzdCBvZiBzZXZlcmFsIGNoYXJhY3RlcnMuIFRoZXJlZm9yZSB3ZSB1c2UgYmVsb3cgcnVs
ZXMgdG8gZmluZCBjaGFyYWN0ZXIgc3RyaW5nLg0KIA0KRmluYWxseSB0aGUgc3lzdGVtIGV4
dHJhY3RzIHRoZSBhcmVhIHRoYXQgc2F0aXNmaWVzIGFsbCBvZiB0aGVzZSBjb25kaXRpb25z
IGFzIGZpbmFsIGNoYXJhY3RlciByZWdpb24uIA0KIA0KIA0KRmlnLiA1IFJlc3VsdCBvZiBG
aWcuIDMNCiANCjQuIEV2YWx1YXRpb24gZXhwZXJpbWVudA0KIA0KV2UgdXNlZCBkYXRhc2V0
IG9mIGNvbXBldGl0aW9uIGZvciByb2J1c3QgdGV4dCByZWFkaW5nIGFuZCBsb2NhdGluZyBk
YXRhc2V0cyBvbiBJQ0RBUiAyMDAzIFs5XS4gVGhlIGRhdGFzZXRzIGFyZSBvcmdhbml6ZWQg
aW50byBTYW1wbGUsIFRyaWFsIGFuZCBDb21wZXRpdGlvbi4gVHJpYWwgZGF0YXNldCBjb25z
aXN0cyBvZiBUcmlhbC1UcmFpbiBzYW1wbGUgYW5kIFRyaWFsLVRlc3Qgc2FtcGxlLiBUcmlh
bC1UcmFpbiBkYXRhc2V0IHdlcmUgc2VydmVkIHRvIHRyYWluIG9yIHR1bmUgb3duIGFsZ29y
aXRobS4gV2UgZG8gbm90IHVzZSBzcGVjaWFsIHRyYWluaW5nIGluIG91ciBhbGdvcml0aG0g
dGhlcmVmb3JlIHdlIHVzZWQgVHJpYWwtVGVzdCBkYXRhc2V0IGFuZCBUcmlhbC1UcmFpbiBk
YXRhc2V0IGZvciBldmFsdWF0ZSBvdXIgYWxnb3JpdGhtLiBUaGVzZSBkYXRhc2V0cyBpbmNs
dWRlIDUwNCBpbWFnZXMgdGFrZW4gYnkgNCBwZXJzb25zLg0KV2UgdXNlIHNhbWUgZXZhbHVh
dGlvbiBtZXRob2RzIG9mIElDREFSMjAwMyBjb21wZXRpdGlvbi4gVGhleSBhcmUgYmFzZWQg
b24gbm90aW9ucyBvZiBwcmVjaXNpb24gYW5kIHJlY2FsbC4gDQogUHJlY2lzaW9uLCBwIGlz
IGRlZmluZWQgYXMgdGhlIG51bWJlciBvZiBjb3JyZWN0IGVzdGltYXRlcyBjIGRpdmlkZWQg
YnkgdGhlIHRvdGFsIG51bWJlciBvZiBlc3RpbWF0ZXMgRToNCiANClJlY2FsbCwgciBpcyBk
ZWZpbmVkIGFzIHRoZSBudW1iZXIgb2YgY29ycmVjdCBlc3RpbWF0ZXMgYyBkaXZpZGVkIGJ5
IHRoZSB0b3RhbCBudW1iZXIgb2YgdGFyZ2V0cyBULg0KIA0KVGhlIGYgbWVhc3VyZXMgdG8g
Y29tYmluZSB0aGUgcHJlY2lzaW9uIGFuZCByZWNhbGwgZmlndXJlcyBpbnRvIGEgc2luZ2xl
IG1lYXN1cmUgb2YgcXVhbGl0eS4gV2Ugc2V0IHdlaWdodCAuDQogDQpUaGUgcmVzdWx0cyBv
ZiB0ZXh0IGFyZWEgZXh0cmFjdGlvbiBtZXRob2QgYXJlIHNob3duIGluIFRhYmxlIDEuIEVk
Z2UgYmFzZWQgdGV4dCBkZXRlY3Rpb24gZ290IHRoZSBiZXN0IHJlc3VsdCBmb3IgYWxsIGlt
YWdlcy4gSW4gdGhpcyBjb25uZWN0aW9uIHRoZSByZXN1bHQgb2Ygd2lubmVyIG9uIElDREFS
IGNvbXBldGl0aW9uIHdhcyBQcmVjaXNpb24gPSAwLjU1LCBSZWNhbGwgPSAwLjQ2IGFuZCBm
ID0gMC41MC4gTW9ycGhvbG9naWNhbCBtZXRob2Qgd2FzIG5vdCBnb29kIHJlc3VsdCBob3dl
dmVyIHRoZXNlIGRhdGFzZXQgY29uc2lzdCBvZiByZWxhdGl2ZSBsYXJnZSBjaGFyYWN0ZXJz
LiBUaGVyZWZvcmUgd2UgbWFrZSBhbm90aGVyIGRhdGFzZXQgd2hpY2ggaXMgY29uc2lzdCBv
ZiA1NSBpbWFnZXMgdGhhdCBpbmNsdWRlIG9ubHkgc21hbGwgY2hhcmFjdGVyIGFyZWEgZnJv
bSBJQ0RBUjIwMDMgZGF0YXNldC4gQW5kIHdlIGV2YWx1YXRlIGVmZmljYWN5IG9mIE1vcnBo
b2xvZ2ljYWwgb3BlcmF0aW9uLiBBcyB0aGUgcmVzdWx0LCBQcmVjaXNpb24gPSAwLjM5LCBS
ZWNhbGwgPSAwLjU1IGFuZCBmID0gMC40Ny4gQWN0dWFsbHkgdGhlIHJlc3VsdCBvZiBFZGdl
IGJhc2VkIG1ldGhvZCB3aGljaCBpcyBiZXN0IGF2ZXJhZ2UgZm9yIGFsbCBkYXRhc2V0IGlz
IFByZWNpc2lvbiA9IDAuMTksIFJlY2FsbCA9IDAuNjIgYW5kIGYgPSAwLjQwLiBUaGVyZWZv
cmUgTW9ycGhvbG9naWNhbCBtZXRob2QgaXMgbW9yZSBlZmZlY3RpdmUgdGhhbiBFZGdlIGJh
c2VkIG1ldGhvZCBob3dldmVyIHRoaXMgcmVzdWx0IGlzIG5vdCBlbm91Z2ggZm9yIHNlYXJj
aGluZyBzbWFsbCBjaGFyYWN0ZXIgYXJlYSBhdCBiZWdpbm5pbmcgb2YgbW9tZW50Lg0KIA0K
VGFibGUgMS4gUmVzdWx0IG9mIHRleHQgYXJlYSBleHRyYWN0aW9uDQogCVByZWNpc2lvbglS
ZWNhbGwJZg0KRWRnZQkwLjU3CTAuNjEJMC41OQ0KUmV2ZXJzZQkwLjYxCTAuMzgJMC41MA0K
OCBjb2xvcgkwLjUyCTAuNDUJMC40OQ0KTW9ycGhvbG9neQkwLjQwCTAuMTcJMC4yOQ0KIA0K
VGFibGUgMiBzaG93cyBjb21iaW5hdGlvbiBvZiBlYWNoIG1ldGhvZC4gRnVzaW9uIGFyZWFz
IGFyZSBtYWRlIGJ5IE9SIG9mIGVhY2ggaW1hZ2UuIEFzIGEgcmVzdWx0IHVzaW5nIGp1c3Qg
T1IgaW1hZ2UgaXMgbm90IGVmZmVjdGl2ZSBiZWNhdXNlIFByZWNpc2lvbiByYXRlIGRvZXMg
bm90IGltcHJvdmUgYWx0aG91Z2ggUmVjYWxsIHJhdGUgaW1wcm92ZXMuIElmIHdlIHVzZSBm
dXNpb24gb2YgZWFjaCBtZXRob2QsIHdlIHNob3VsZCBhaW0gSGktUHJlY2lzaW9uIGFuZCBM
b3ctUmVjYWxsLiANCiANClRhYmxlIDIuIFJlc3VsdCBvZiBmdXNpb24gbWV0aG9kDQogCVBy
ZWNpc2lvbglSZWNhbGwJZg0KRSs4CTAuNTAJMC42OAkwLjU5DQpSK0UJMC41NAkwLjY3CTAu
NjENCkUrTQkwLjUzCTAuNjUJMC41OQ0KUitFKzgJMC40OQkwLjcxCTAuNjANClIgOiBSZXZl
cnNlLCBFIDogRWRnZSwgOCA6IDhjb2xvciwgTSA6IE1vcnBob2xvZ3kNCg0KNS4gQ29uY2x1
c2lvbg0KICANCkluIHRoaXMgcGFwZXIgd2UgZGVzaWduZWQgdGhlIHRleHQgcmVhZGluZyBz
eXN0ZW0gZm9yIHZpc3VhbGx5IGltcGFpcmVkIHBlcnNvbi4gQXMgZmlyc3Qgc3RlcCB3ZSBw
cm9wb3NlZCA0IHRleHQgYXJlYSBleHRyYWN0aW9uIG1ldGhvZHMgZm9yIG5hdHVyYWwgc2Nl
bmUgaW1hZ2UuIFdlIGV2YWx1YXRlIGVhY2ggbWV0aG9kIGZvciBJQ0RBUjIwMDMgY29tcGV0
aXRpb24gZGF0YXNldHMuIEFzIHRoZSByZXN1bHQsIEVkZ2UgYmFzZWQgbWV0aG9kIGlzIG1v
c3QgZWZmZWN0aXZlIGZvciB0aGlzIGRhdGFzZXQuIFdlIGFsc28gZXZhbHVhdGVkIGZ1c2lv
biBtZXRob2Qgb2YgZWFjaCBtZXRob2QgaG93ZXZlciBpdCBpcyBub3Qgc28gZWZmZWN0aXZl
IGp1c3QgdXNpbmcgT1Igb2YgZWFjaCBtZXRob2QuIE91ciBmdXR1cmUgd29yayBpcyB0byBw
cm9wb3NlIGVmZmVjdGl2ZSBmdXNpb24gbWV0aG9kIGFuZCBmaW5kaW5nIHNtYWxsIGNoYXJh
Y3RlciBhcmVhIGhpZ2ggYWNjdXJhY3kuDQogDQpSZWZlcmVuY2VzDQogDQpbMV0gRC4gRG9l
cm1hbm4sIEouIExpYW5nLCBhbmQgSC4gTGksIIFnUHJvZ3Jlc3MgaW4gQ2FtZXJhLUJhc2Vk
IERvY3VtZW50IEltYWdlcyBBbmFseXNpc4FoLCBQcm9jLm9mIHRoZSBJQ0RBUiwgMjAwMywg
cHAuIDYwNi02MTYuDQoNClsyXSBULiBZYW1hZ3VjaGksIFkuIE5ha2FubywgTS4gTWFydXlh
bWEsIEguIE1peWFvIGFuZCBULiBIYW5hbm9pLCCBZ0RpZ2l0IENsYXNzaWZpY2F0aW9uIG9u
IFNpZ25ib2FyZHMgZm9yIFRlbGVwaG9uZSBOdW1iZXIgUmVjb2duaXRpb26BaCwgUHJvYy5v
ZiB0aGUgSUNEQVIsIDIwMDMsIHBwLiAzNTktMzYzLg0KDQpbM10gSy4gTWF0c3VvLCBLLiBV
ZWRhIGFuZCBNLiBVbWVkYSwggWdFeHRyYWN0aW9uIG9mIENoYXJhY3RlciBTdHJpbmcgZnJv
bSBTY2VuZSBJbWFnZSBieSBCaW5hcml6aW5nIExvY2FsIFRhcmdldCBBcmVhgWgsIFQtSUVF
IEphcGFuLCBWb2wuIDEyMi1DLCBOby4yLCAyMDAyLCBwcC4gMjMyLTI0MS4NCg0KWzRdIFku
IExpdSwgVC4gWWFtYW11cmEsIE4uIE9obmlzaGkgYW5kIE4uIFN1Z2llLCCBZ0V4dHJhY3Rp
b24gb2YgQ2hhcmFjdGVyIFN0cmluZyBSZWdpb25zIGZyb20gYSBTY2VuZSBJbWFnZYFoLCBJ
RUlDRSBKYXBhbiwgRC1JSSwgVm9sLiBKODEsIE5vLjQsIDE5OTgsIHBwLiA2NDEtNjUwLg0K
DQpbNV0gTC4gR3UsIE4uIFRhbmFrYSBhbmQgUi5NLiBIYXJhbGljaywggWdUaGUgRXh0cmFj
dGlvbiBvZiBDaGFyYWN0ZXJzIGZyb20gQ292ZXIgSW1hZ2VzIFVzaW5nIE1hdGhlbWF0aWNh
bCBNb3JwaG9sb2d5gWgsIElFSUNFIEphcGFuLCBELUlJLCBWb2wuIEo4MCwgTm8uMTAsIDE5
OTcsIHBwLiAyNjk2LTI3MDQuDQoNCls2XSBKLiBZYW5nLCBKLiBHYW8sIFkuIFpoYW5nLCBY
LiBDaGVuIGFuZCBBLiBXYWliZWwsIIFnQW4gQXV0b21hdGljIFNpZ24gUmVjb2duaXRpb24g
YW5kIFRyYW5zbGF0aW9uIFN5c3RlbYFoLCBQcm9jZWVkaW5ncyBvZiB0aGUgV29ya3Nob3Ag
b24gUGVyY2VwdGl2ZSBVc2VyIEludGVyZmFjZXMgKFBVSScwMSksIDIwMDEsIHBwLiAxLTgu
DQoNCls3XSBBLiBaYW5kaWZhciwgUi4gRHVyYWlzd2FtaSwgQS4gQ2hhaGluZSwgYW5kIEwu
IERhdmlzLCCBZ0EgVmlkZW8gQmFzZWQgSW50ZXJmYWNlIHRvIFRleHR1YWwgSW5mb3JtYXRp
b24gZm9yIHRoZSBWaXN1YWxseSBJbXBhaXJlZIFoLCBJRUVFIDR0aCBJQ01JLCAyMDAyLCBw
cC4zMjUtMzMwLg0KDQpbOF0gTi4gT3RzdSwggWdBIFRocmVzaG9sZCBTZWxlY3Rpb24gTWV0
aG9kIGZyb20gR3JheS1MZXZlbCBIaXN0b2dyYW2BaCwgSUVFRSBUcmFucy4gU3lzdGVtcywg
TWFuIGFuZCBDeWJlcm5ldGljcywgVm9sLiA5LCAxOTc5LCBwcC4gNjItNjkuDQoNCls5XSBT
Lk0uIEx1Y2FzLCBBLiBQYW5hcmV0b3MsIEwuIFNvc2EsIEEuIFRhbmcsIFMuIFdvbmcsIGFu
ZCBSLiBZb3VuZywggWdJQ0RBUiAyMDAzIFJvYnVzdCBSZWFkaW5nIENvbXBldGl0aW9uc4Fo
LCBQcm9jLm9mIHRoZSBJQ0RBUiwgMjAwMywgcHAuIDY4Mi02ODcuDQoNClsxMF0gQS4gU2hp
bywggWdBIER5bmFtaWMgVGhyZXNob2xkaW5nIE1ldGhvZCBmb3IgQ2hhcmFjdGVyIERldGVj
dGlvbiBpbiBDb21wbGV4IFNjZW5lIEltYWdlc4FoLCBJRUlDRSBKYXBhbiwgRCwgVm9sLiBK
NzEsIE5vLjUsIDE5ODgsIHBwLiA4NjMtODczLg0KIA0K

----------------------9913872359717223--


